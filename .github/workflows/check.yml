name: check
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: cargo fmt --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check
  yamlfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v5
      - name: install yamlfmt
        run: |
          go install github.com/google/yamlfmt/cmd/yamlfmt@latest
      - name: run yamlfmt
        run: |
          yamlfmt -lint .github
  clippy:
    runs-on: ubuntu-latest
    name: clippy (${{ matrix.toolchain }})
    strategy:
      fail-fast: false
      matrix:
        toolchain: [1.88.0, nightly-2025-06-26]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy
      # contract-client-gen and export-abi features considerably change the structure of the output code.
      # So they are checked individually.
      - name: Run clippy excluding contract-client-gen and export-abi features
        run: |
          # Get all crates in the workspace
          workspace_members=$(cargo metadata --format-version=1 | jq -r '.workspace_members[] | split(" ")[0]')

          # For each crate, run clippy with all features except contract-client-gen and export-abi
          for crate in $workspace_members; do
            # Get features for this crate excluding the ones we don't want
            features=$(cargo metadata --format-version=1 |
              jq -r ".packages[] | select(.id == \"$crate\") | .features | keys[] |
              select(. != \"contract-client-gen\" and . != \"export-abi\")" |
              tr '\n' ',' | sed 's/,$//')

            echo "Running clippy on $crate with features: $features"
            if [ -n "$features" ]; then
              cargo clippy -p "$crate" --all-targets --no-default-features --features "$features" -- -D warnings
            else
              cargo clippy -p "$crate" --all-targets --no-default-features -- -D warnings
            fi
          done
      - name: Run clippy on stylus-proc with contract-client-gen feature
        run: |
          cargo clippy -p stylus-proc --no-default-features --features "contract-client-gen" --all-targets -- -D warnings
      - name: Run clippy with export-abi feature
        run: |
          echo "Checking stylus-proc with export-abi"
          cargo clippy -p stylus-proc --no-default-features --features "export-abi" --all-targets -- -D warnings

          echo "Checking stylus-sdk with export-abi"
          cargo clippy -p stylus-sdk --no-default-features --features "export-abi" --all-targets -- -D warnings
