#[test]
fn test_constructor_cmd() {
    assert_cmd::Command::cargo_bin("cargo-stylus-beta")
        .expect("binary not found")
        .current_dir("tests/contract_abi")
        .arg("stylus-beta")
        .arg("constructor")
        .assert()
        .success()
        .stdout("constructor(uint256 initial_number, string calldata _b) payable\n");
}

#[test]
fn test_export_abi_cmd() {
    assert_cmd::Command::cargo_bin("cargo-stylus-beta")
        .expect("binary not found")
        .current_dir("tests/contract_abi")
        .arg("stylus-beta")
        .arg("export-abi")
        .assert()
        .success()
        .stdout(
            "\
/**
 * This file was automatically generated by Stylus and represents a Rust program.
 * For more information, please see [The Stylus SDK](https://github.com/OffchainLabs/stylus-sdk-rs).
 */

// SPDX-License-Identifier: MIT-OR-APACHE-2.0
pragma solidity ^0.8.23;

interface ICounter  {
    function pureFn() external pure returns (uint256);

    function noInputNoOutput() external view;

    function numbers() external view returns (uint256, uint256);

    function mixed(MixedInput input) external;

    function mixedResult() external view returns (MixedResult);

    struct MixedResult {uint256 number;string text;uint256 number2;}
}\n",
        );
}
